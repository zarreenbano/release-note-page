{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/module.compiled.js","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts","turbopack:///[project]/src/lib/auth.ts"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxRuntime\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n","// src/lib/auth.ts\r\n\r\n// In-memory user storage (resets on page refresh in Claude artifacts)\r\n// For production, replace with localStorage or a proper backend\r\nlet currentUser: string | null = null;\r\n\r\n// Mock user database (in a real app, this would be in a backend)\r\nconst users = new Map<string, string>([\r\n  ['user1@example.com', 'password1'],\r\n  ['user2@example.com', 'password2'],\r\n]);\r\n\r\n/**\r\n * Get the currently logged-in user\r\n * @returns The user's email or null if not logged in\r\n */\r\nexport function getCurrentUser(): string | null {\r\n  return currentUser;\r\n}\r\n\r\n/**\r\n * Log in a user\r\n * @param email - User's email\r\n * @param password - User's password\r\n * @returns true if login successful, false otherwise\r\n */\r\nexport function login(email: string, password: string): boolean {\r\n  const storedPassword = users.get(email);\r\n  \r\n  if (storedPassword && storedPassword === password) {\r\n    currentUser = email;\r\n    return true;\r\n  }\r\n  \r\n  return false;\r\n}\r\n\r\n/**\r\n * Log out the current user\r\n */\r\nexport function logout(): void {\r\n  currentUser = null;\r\n}\r\n\r\n/**\r\n * Check if a user is currently authenticated\r\n * @returns true if a user is logged in, false otherwise\r\n */\r\nexport function isAuthenticated(): boolean {\r\n  return currentUser !== null;\r\n}\r\n\r\n/**\r\n * Sign up a new user (limited to 2 users total)\r\n * @param email - User's email\r\n * @param password - User's password\r\n * @returns true if signup successful, false if user limit reached or user exists\r\n */\r\nexport function signup(email: string, password: string): boolean {\r\n  // Check if user already exists\r\n  if (users.has(email)) {\r\n    return false;\r\n  }\r\n  \r\n  // Check if we've reached the 2-user limit\r\n  if (users.size >= 2) {\r\n    return false;\r\n  }\r\n  \r\n  // Add new user\r\n  users.set(email, password);\r\n  currentUser = email;\r\n  return true;\r\n}\r\n\r\n/**\r\n * Get all registered users (for testing purposes)\r\n * @returns Array of user emails\r\n */\r\nexport function getAllUsers(): string[] {\r\n  return Array.from(users.keys());\r\n}"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK","vendored","ReactJsxRuntime","React"],"mappings":"0NA0BQG,EAAOC,OAAO,CAAGC,EAAQ,CAAA,CAAA,IAAA,iCC1BjCF,EAAOC,OAAO,CACZC,EAAQ,CAAA,CAAA,IAAA,GACRI,QAAQ,CAAC,YAAY,CAAEC,eAAe,+BCFxCP,EAAOC,OAAO,CACZC,EAAQ,CAAA,CAAA,IAAA,GACRI,QAAQ,CAAC,YAAY,CAAEE,KAAK,yBCE9B,IAAI,EAA6B,KAG3B,EAAQ,IAAI,IAAoB,CACpC,CAAC,oBAAqB,YAAY,CAClC,CAAC,oBAAqB,YAAY,CACnC,EAMM,SAAS,IACd,OAAO,CACT,CAQO,SAAS,EAAM,CAAa,CAAE,CAAgB,EACnD,IAAM,EAAiB,EAAM,GAAG,CAAC,SAEjC,EAAI,GAAkB,IAAmB,IACvC,EAAc,GACP,CAF0C,CAMrD,CAKO,SAAS,IACd,EAAc,IAChB,CAgBO,SAAS,EAAO,CAAa,CAAE,CAAgB,QAEpD,CAAI,EAAM,GAAG,CAAC,MAKV,EALkB,AAKZ,IAAI,GAAI,GAAG,CAKrB,EAAM,GAAG,CAAC,EAAO,GACjB,EAAc,GACP,EACT","ignoreList":[0,1,2]}